type Person =
    name string

fn make_babies(p1 Person, p2 Person) -> Person =
    let p1_half = p1.name.substr(0, core::len(p1.name)/2)
    let p2_half = p2.name.substr(core::len(p2.name)/2, core::len(p2.name))

    return Person { name: "{p1_half}{p2_half}" }

fn chars(str string) =
    mut arr = []

    for i in 0..core::len(str):
        let char = core::string::at(str, i)
        core::array::push(arr, char)

    return arr

fn substr(str string, _from int, to int) -> string =
    let str_chars = chars(str)
    mut substr = ""

    for i in _from..to:
        substr += str_chars[i]

    return substr

fn babies =
    let daddy = Person { name: "Blazej" }
    let mommy = Person { name: "Kundegunda" }

    let baby = make_babies(daddy, mommy)

    core::print("imie bachora: {baby.name}")
