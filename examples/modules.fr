type Person =
    age  int
    name string

fn square(arr []int) -> []int =
    let res = arr.util::map(util::square)

    return res

export fn plus1(arr []int) -> []int = 
    let []int res = arr
        .util::map(util::add1)

    return res

fn main =
    let []int arr1 = square([1, 2, 3, 4, 5])
    util::print(arr1)
    
    let arr2 = plus1([1, 2, 3, 4, 5])
    arr2.util::print()

    // util::main()

/*
maybe new syntax

// This seems better since you usually change the arg name with some ide functionality
// while you change the type manually
// putting the type before func name and foo does seem kind of inconsistent though

let fn([]int -> ()) lambda = 
    fn x => for y in x: y * 2

*/