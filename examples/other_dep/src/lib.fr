/*
type Foo =
    val int

fn get_4 = return 4

fn test(val int) -> int =
    return val + (5 * get_4()) + val

fn other_foo(arr [int]) =

    mut sum = 0

    for i in arr:
        sum += 1
        if i > 2:
            break

    return sum

fn main =
    other_foo([1, 2, 3])

*/

fn foo =
    return 2

fn main =
    let b = 6
    let a = -foo() + b * 3

    // exit with value of `a`
    @instr("mov x0, {a}")
    @instr("mov x16, #1")
    @instr("svc #0")
